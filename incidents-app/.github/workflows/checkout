#!/usr/bin/env node
const { fs, path, exists, copy, read, write, append=_append } = require("@sap/cds").utils

async function checkout (xmpl, ...requires) {
  // copy content from xmpl to incidents...
  await Promise.all (['app','srv','db','test'] .map (async each => {
    let src = `xmpls/${xmpl}/${each}`
    if (exists(src)) return await copy(src).to(each)
  }))
  // enhance package.json
  let xmpls = await read (`xmpls/${xmpl}/package.json`)
  let base = await read ('package.json')
  for (let each of requires) base.cds.requires[each] = xmpls.cds.requires[each]
  if (append === _append) base = _formatted(base) //> for older cds versions only
  await write (base) .to ('package.json')
}

exports['remote-service'] = ()=>
  checkout ('remote-service', 'API_BUSINESS_PARTNER')

exports['messaging'] = ()=> Promise.all([
  checkout ('messaging', 'messaging', 'API_BUSINESS_PARTNER'),
  append ('\n'+`using from './incidents/field';`+'\n') .to ('app/services.cds') // add email fields to UI
])

if (!module.parent) exports[process.argv[2]]?.().catch(console.error) || console.log (
  `Usage: ${path.relative(process.cwd(),__filename)} ${Object.keys(exports).join('|')}`
)

// ------------------------------------------------------------------------
// fixes for missing features in older cds versions
function _append (str) { return { to: file => fs.promises.appendFile(path.join(cds.root,file), str) }}
function _formatted (json) { return JSON.stringify(json,null,2) }
